// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id       String @unique @default(uuid())
  name     String
  email    String @unique
  password String

  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  Todos         Todo[]
  RefreshTokens RefreshToken[]
}

model Todo {
  id        String   @id @unique @default(uuid())
  body      String
  done      Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

model RefreshToken {
  id        String   @id @unique @default(uuid())
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String
}

model Book {
  id          String @id @unique @default(uuid())
  title       String
  descriptino String
  published   Int
  ISBN        String

  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  author      Author    @relation(fields: [authorId], references: [id])
  authorId    String
  lang        Language  @relation(fields: [languageId], references: [id])
  languageId  String
  publisher   Publisher @relation(fields: [publisherId], references: [id])
  publisherId String
  category    Category  @relation(fields: [categoryId], references: [id])
  categoryId  String
}

model Category {
  id        String   @id @unique @default(uuid())
  title     String   @unique
  Books     Book[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Publisher {
  id        String   @id @unique @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Books     Book[]
}

model Language {
  id        String   @id @unique @default(uuid())
  title     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Books     Book[]
}

model BookReview {
  id        String   @id @unique @default(uuid())
  rate      Int      @default(1)
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Author {
  id        String   @id @unique @default(uuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Books     Book[]
}
